# global config

# if an error is encountered, stop
quit_on_error = false

listen = [
    "0.0.0.0:53",
    "[::]:53",
]

# default upstream
upstreams = [
    "101.6.6.6:53",
    "202.141.162.123:53",
]

allowed_client_subnets = [
    "192.168.1.0/24",
    # "0.0.0.0/0",
    # "::/0",
]

# set to true if you use Active Directory and allows DNS update
allow_ddns_updates = false

# EDNS0 Client Subnet
[ecs]
enabled = true
default_prefix_v4 = 24
default_prefix_v6 = 48

#[control_socket]
#listen = "0.0.0.0"
#key = ""

#[web_server]
#listen = "127.0.0.1:8083"
#password = "supersecretpassword"
#api_key = "supersecretAPIkey"

# Rules

# you can include unlimited [[match]] blocks
# but do not duplicate the same config

# example: drop requests to certain domain
[[match]]
domains = [
    "music.httpdns.c.163.com",
]
# note: "action" works in every [[match]] block. The default value is "resolve".
#   "block" or "nxdomain" means return DNS NXDOMAIN.
#   "refuse" means return DNS REFUSE.
#   "drop" means packet getting dropped.
action = "block"

# example: resolve certain domain using other servers
[[match]]
domains = [
    "music.126.net",
    "music.126.net.gccdn.net",
    "music.126.net.usgcac.cdnetworks.net",
    "music.126.net.wscdns.com",
    "music.163.com",
    "netease.ugcvideoss.ourdvs.com",
]
upstreams = [
    "223.5.5.5:53",
    "223.6.6.6:53",
]

# example: get a China-mainland-specific domain list from https://github.com/felixonmars/dnsmasq-china-list
# so we can get CDN acceleration
[[match]]
provider = "dnsmasq-china-list"
upstreams = [
    "223.5.5.5:53",
    "223.6.6.6:53",
]

# example: forward certain domain to its domain controllers in an Active Directory setup
# Note: we can only get DCs from DNS information, so here we assume every DC have DNS roles installed
# If you have an explicit list of DNS server IPs, use the example above
[[match]]
provider = "ActiveDirectory"
primary_domain = "corp.contoso.com"
# Alternative UPNs and rDNSs, if needed
domains = [
    "corp.contoso2.com",
    "corp.contoso3.com",
]
# set explicit bootstrap servers for querying DCs
# they will be tried one by one before trying system DNS server
bootstrap_servers = [
    "192.168.1.1:53"
]

# example: a minimal Active Directory setup
[[match]]
provider = "ActiveDirectory"
primary_domain = "corp.contoso.com"

# example: if we cannot resolve that domain, it will be ignored by default with "quit_on_error" = false
[[match]]
provider = "ActiveDirectory"
primary_domain = "non-existent-domain.example.com"
bootstrap_server = "198.51.100.1:53"
